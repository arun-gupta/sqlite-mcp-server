name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build TypeScript
      run: |
        npm ci
        npm run build
        npm run type-check

    - name: Build the Docker image
      run: |
        TIMESTAMP=$(date +%s)
        docker build . --file Dockerfile --tag arungupta/sqlite-mcp-server:$TIMESTAMP
        echo "IMAGE_TAG=$TIMESTAMP" >> $GITHUB_ENV

    - name: Test Docker image (HTTP mode)
      run: |
        docker run -d --name test-http -p 4000:4000 -e SERVER_MODE=http -e HTTP_PORT=4000 arungupta/sqlite-mcp-server:${{ env.IMAGE_TAG }}
        sleep 10
        curl -f http://localhost:4000/health || exit 1
        docker stop test-http && docker rm test-http

    - name: Test Docker image (MCP mode)
      run: |
        docker run -d --name test-mcp -e SERVER_MODE=mcp arungupta/sqlite-mcp-server:${{ env.IMAGE_TAG }}
        sleep 5
        echo '{"jsonrpc":"2.0","id":1,"method":"tools/call","params":{"name":"list_tables","arguments":{}}}' | docker exec -i test-mcp node dist/server.js
        docker stop test-mcp && docker rm test-mcp

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
